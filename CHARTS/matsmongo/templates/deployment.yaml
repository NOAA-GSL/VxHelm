apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matsmongo.fullname" . }}
  labels:
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
  app.kubernetes.io/name: {{ include "matsmongohelm.name" . }}
  app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: {{ include "matsmongohelm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      labels:
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: mongoport
          containerPort: 27017
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /data/db
          name: data
          subPath: {{ .Values.MatsVolumeDataPath }}/mongodata
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistentVolumeClaim }}

