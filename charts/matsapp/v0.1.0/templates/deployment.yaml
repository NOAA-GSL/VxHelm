apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-22wwq
    field.cattle.io/publicEndpoints: '[{"addresses":[""],"port":80,"protocol":"HTTP","serviceName":"{{ .Values.buildEnvironment }}:{{ .Values.appReference }}","ingressName":"{{ .Values.buildEnvironment }}:matsapps-{{ .Values.buildEnvironment }}","hostname":"{{ .Values.rootUrl }}","path":"/{{ .Values.deploymentEnvironment }}/{{ .Values.appReference }}","allNodes":false},{"port":31473,"protocol":"TCP","serviceName":"{{ .Values.deploymentEnvironment }}:{{ .Values.appReference }}-nodeport","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  {{- if eq .Values.deploymentEnvironment "matsdev" }}
    deployment = "development"
  {{- else if eq .Values.deploymentEnvironment "matspreint" }}
    deployment = "integration"
  {{- else if eq .Values.deploymentEnvironment "matsint" }}
    deployment = "production"
  {{- else if eq .Values.deploymentEnvironment "matsprod" }}
    deployment = "production"
  {{- end }}
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: "deployment-{{ .Values.deploymentEnvironment }}-{{ .Values.appReference }}"
  name: {{ .Values.appReference }}
  selfLink: "/apis/apps/v1/namespaces/{{ .Values.deploymentEnvironment }}/deployments/{{ .Values.appReference }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: "deployment-{{ .Values.deploymentEnvironment }}-{{ .Values.appReference }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-01-06T17:17:37Z"
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"{{ .Values.appReference }}-nodeport","kind":"NodePort","name":"80tcp01","protocol":"TCP"}]]'
      creationTimestamp: null
      labels: workload.user.cattle.io/workloadselector: "deployment-{{ .Values.deploymentEnvironment }}-{{ .Values.appReference }}"
    spec:
      containers:
        - env:
            - name: ROOT_URL
              value: "{{ .Values.rootUrl }}/{{ .Values.deploymentEnvironment }}/{{ .Values.appReference }}"
          image: matsapps/$development:mats-{{ .Values.appReference }}-nightly
          imagePullPolicy: Always
          name: {{ .Values.appReference }}
          ports:
            - containerPort: 80
              name: 80tcp01
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /usr/app/settings
              name: settings
              subPath: "{{ .Values.deploymentEnvironment }}/settings"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: settings
          persistentVolumeClaim:
            claimName: matsdata
status: {}
