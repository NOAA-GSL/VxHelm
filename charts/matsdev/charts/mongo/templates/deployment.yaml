apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/publicEndpoints: '[{"protocol":"TCP","serviceName":"{{ .Release.Namespace }}:{{ .Values.appName }}-nodeport","allNodes":true}]'
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: "deployment-{{ .Release.Namespace }}-{{ .Values.appName }}"
  name: {{ .Values.appName }}
  namespace: {{ .Release.Namespace }}
  selfLink: "/apis/apps/v1/namespaces/{{ .Release.Namespace }}/deployments/{{ .Values.appName }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: "deployment-{{ .Release.Namespace }}-{{ .Values.appName }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":{{ .Values.portNumber }},"dnsName":"{{ .Values.appName }}-nodeport","kind":"NodePort","name":"{{ .Values.portNumber }}tcp01","protocol":"TCP"}]]'
      labels:
        workload.user.cattle.io/workloadselector: "deployment-{{ .Release.Namespace }}-{{ .Values.appName }}"
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "Adm1n0"
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_DATABASE
          value: "admin"
        image: {{ .Values.image.repository }}:{{ .Values.image.appVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.appName }}
        ports:
          - containerPort: {{ .Values.portNumber }}
            name: {{ .Values.portNumber }}tcp01
            protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
          - mountPath: /data/db
            name: data
            subPath: {{ .Values.persistentVolumeClaim }}/{{ .Release.Namespace }}/{{ .Values.appName }}data
          - name: {{ .Values.appName }}-init
            mountPath: /docker-entrypoint-initdb.d
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeClaim }}
        - name: {{ .Values.appName }}-init
          configMap:
            name: {{ .Values.appName }}-init
