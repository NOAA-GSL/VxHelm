apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/publicEndpoints: '[{"addresses":[""],"port":80,"protocol":"HTTP","serviceName":"{{ .Release.Namespace }}:met-precip","ingressName":"{{ .Release.Namespace }}:matsapps-{{ .Release.Namespace }}","hostname":"{{ .Values.rootUrl }}","path":"/{{ .Release.Namespace }}/met-precip","allNodes":false},{"protocol":"TCP","serviceName":"{{ .Release.Namespace }}:met-precip-nodeport","allNodes":true}]'
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: "deployment-{{ .Release.Namespace }}-met-precip"
  name: met-precip
  selfLink: "/apis/apps/v1/namespaces/{{ .Release.Namespace }}/deployments/met-precip"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: "deployment-{{ .Release.Namespace }}-met-precip"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"met-precip-nodeport","kind":"NodePort","name":"80tcp01","protocol":"TCP"}]]'
      labels:
        workload.user.cattle.io/workloadselector: "deployment-{{ .Release.Namespace }}-met-precip"
    spec:
      containers:
        - env:
            - name: DEPLOYMENT_ENVIRONMENT
              {{- if eq .Release.Namespace "matsdev" }}
              value: "development"
              {{- else if eq .Release.Namespace "matspreint" }}
              value: "integration"
              {{- else if eq .Release.Namespace "matsint" }}
              value: "production"
              {{- else if or (eq .Release.Namespace "matsprod") (eq .Release.Namespace "metexpress") }}
              value: "production"
              {{- end }}
            - name: GROUP_ORDER
              value: Upper Air,Ceiling and Visibility,Surface,Precipitation,Radar,METexpress
            - name: ROOT_URL
              value: "{{ .Values.rootUrl }}/{{ .Release.Namespace }}/met-precip"
          {{- if eq .Release.Namespace "matsdev" }}
          image: "matsapps/development:met-precip-{{ .Values.image.appVersion }}"
          {{- else if eq .Release.Namespace "matspreint" }}
          image: "matsapps/integration:met-precip-{{ .Values.image.appVersion }}"
          {{- else if eq .Release.Namespace "matsint" }}
          image: "matsapps/production:met-precip-{{ .Values.image.appVersion }}"
          {{- else if or (eq .Release.Namespace "matsprod") (eq .Release.Namespace "metexpress") }}
          image: "matsapps/production:met-precip-{{ .Values.image.appVersion }}"
          {{- end }}
          imagePullPolicy: Always
          name: met-precip
          ports:
            - containerPort: 80
              name: 80tcp01
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /usr/app/settings
              name: settings
              subPath: {{ .Release.Namespace }}/settings
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: settings
          persistentVolumeClaim:
            claimName: matsdata
